Designing the Frontend involves creating the ui/ux experience for the backend api's
managing user sessions, creating shops, listing products among others 

 The API's 
 // Product Routes
app.get('/onesoko/products', productsController.products_list);
app.get('/onesoko/products/:id', productsController.product_detail);
app.post('/onesoko/products', protect, restrictTo('admin', 'vendor'), productsController.product_create);
app.put('/onesoko/products/:id', protect, restrictTo('admin', 'vendor'), productsController.product_update);
app.delete('/onesoko/products/:id', protect, restrictTo('admin'), productsController.product_delete);

// Shop Routes
app.get('/onesoko/shops', shopController.shops_list);
app.get('/onesoko/shops/:id', shopController.shop_detail);
app.post('/onesoko/shops', protect, restrictTo('admin'), shopController.shop_create);
app.put('/onesoko/shops/:id', protect, restrictTo('admin'), shopController.shop_update);
app.delete('/onesoko/shops/:id', protect, restrictTo('admin'), shopController.shop_delete);
app.post('/onesoko/shops/add-product', protect, restrictTo('admin', 'vendor'), shopController.shop_add_product);
app.post('/onesoko/shops/remove-product', protect, restrictTo('admin', 'vendor'), shopController.shop_remove_product);
app.get('/onesoko/shops/near', shopController.shops_near);
app.post('/onesoko/shops/products', shopController.shop_products);
app.post('/onesoko/shops/vendor', protect, restrictTo('admin'), shopController.shop_vendor);

// Vendor Routes
app.get('/onesoko/vendors', vendorController.vendors_list);
app.get('/onesoko/vendors/:id', vendorController.vendor_detail);
app.post('/onesoko/vendors', protect, restrictTo('admin'), vendorController.vendor_create);
app.put('/onesoko/vendors/:id', protect, restrictTo('admin', 'vendor'), vendorController.vendor_update);
app.delete('/onesoko/vendors/:id', protect, restrictTo('admin'), vendorController.vendor_delete);
app.post('/onesoko/vendors/assign-shop', protect, restrictTo('admin'), vendorController.vendor_assign_shop);
app.post('/onesoko/vendors/remove-shop', protect, restrictTo('admin'), vendorController.vendor_remove_shop);
